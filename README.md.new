# PCAP Analysis on IoT Attacks
## Senior Project ~ F2024-S2025

This tool analyzes PCAP files to study IoT attack patterns. It extracts features from network traffic and provides comparison capabilities.

## Quick Start

```bash
# 1. Clone the repository
git clone https://github.com/georgiouc/Senior-Project-F2024-S2025.git
cd Senior-Project-F2024-S2025

# 2. Set up Python environment
python3 -m venv myvenv
source myvenv/bin/activate  # On Linux/macOS/WSL

# 3. Install dependencies
pip install -r requirements.txt
```

## Prerequisites

- **Python 3.x** with pip and venv modules
- **tcpdump** (Linux/macOS) or WSL (Windows) recommended
- Required Python packages (installed via requirements.txt):
  - dpkt
  - pandas
  - scapy
  - scipy
  - tqdm
  - Jinja2

## Usage Guide

### 1. Prepare PCAP Files

Place your `.pcap` files in the `PCAP` folder. Files can be:
- Directly in the PCAP folder
- Organized in subfolders by category (e.g., Benign, BruteForce)

The tool automatically detects categories from folder names and filenames.

### 2. Process PCAP Files

```bash
python3 Miner/Generate_dataset.py
```

This generates:
- CSV files in the `CSV` folder
- A `metadata.csv` file with category information

### 3. Analyze Results (Optional)

Compare feature sets between different traffic types:

```bash
python3 Analyser/Analyse_dataset.py --base <benign_csv> --compare <attack_csv> --tex
```

**Options:**
- `--base <file>`: Baseline (benign) CSV file
- `--compare <file>`: Attack/comparison CSV file
- `--tex`: Generate LaTeX tables (optional)

**Output:**
- Feature occurrence results in `Analyser/Occurrences/`
- Feature comparison results in `Analyser/Comparison/`

> **Note:** You can specify just the filename (the script will look in `CSV/`), or provide a full path.

### 4. Visualization & Reporting

*Coming in future updates:*

```bash
# Visualize results (coming soon)
python3 visualize.py

# Generate reports (future feature)
python3 report.py
```
